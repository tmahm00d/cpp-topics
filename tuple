#include <bits/stdc++.h>
using namespace std;
int main()
{
/*  tuple <int, string> person(24, "AL");
    cout << get<1>(person) << '\n';  //<< get<0>(person) << '\n';
    get<1>(person) = "Mahmud";
    cout << get<1>(person) << '\n';
    get<0>(person) = 23;
    cout << get<0>(person) << '\n'; // << get<0>(person) << '\n'; */

/*  tuple<int, int> t1;
    tuple<int, int> t2;
    t1 = make_tuple(1, 2);
    t2 = make_tuple(3, 4);
    t1.swap(t2);                   // [swap tuples]
    cout << get<0>(t1) << '\n';
    cout << get<1>(t1) << '\n';
    cout << get<0>(t2) << '\n';
    cout << get<1>(t2) << '\n'; */

/*  tuple<int, int> t1;
    t1 = make_tuple(1,2);
    int x, y;
    tie(x, y) = t1;
    cout << x << '\n';             // [decomposing tuple]
    cout << y << '\n';
    cout << get<0>(t1) << '\n';
    cout << get<1>(t1) << '\n'; */


/*  tuple <int, char> t1(20, 'M');
    tuple <char, string> t2('S', "Hello!");
    //tuple <int, char, char, string> t3;
    auto t3 = tuple_cat(t1, t2);
    cout << get<0>(t3) << '\n';      // [concatenating tuple]
    cout << get<1>(t3) << '\n';
    cout << get<2>(t3) << '\n';
    cout << get<3>(t3) << '\n'; */

    return 0;
}
